name: CI

on:
  push:
    branches: [ main, modernization_with_claude ]
  pull_request:
    branches: [ main ]

env:
  JAVA_VERSION: '11'
  MAVEN_OPTS: -Xmx2g

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK ${{ env.JAVA_VERSION }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Run tests
      run: ./mvnw clean test
      
    - name: Generate test report
      uses: dorny/test-reporter@v1
      if: success() || failure()
      with:
        name: Maven Tests
        path: '**/target/surefire-reports/*.xml'
        reporter: java-junit

  # Temporarily disabled for faster CI - re-enable after core build is stable
  # security:
  #   runs-on: ubuntu-latest
  #   
  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v4
  #     
  #   - name: Set up JDK ${{ env.JAVA_VERSION }}
  #     uses: actions/setup-java@v4
  #     with:
  #       java-version: ${{ env.JAVA_VERSION }}
  #       distribution: 'temurin'
  #       
  #   - name: Cache Maven dependencies
  #     uses: actions/cache@v3
  #     with:
  #       path: ~/.m2
  #       key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
  #       restore-keys: ${{ runner.os }}-m2
  #       
  #   - name: Run OWASP Dependency Check
  #     env:
  #       NVD_API_KEY: ${{ secrets.NVD_API_KEY }}
  #     run: |
  #       ./mvnw org.owasp:dependency-check-maven:check \
  #         -DfailBuildOnCVSS=7 \
  #         -DsuppressionsFile=.github/owasp-suppressions.xml \
  #         ${NVD_API_KEY:+-Dnvd.api.key=$NVD_API_KEY}
  #         
  #   - name: Upload dependency check results
  #     uses: actions/upload-artifact@v4
  #     if: always()
  #     with:
  #       name: dependency-check-report
  #       path: target/dependency-check-report.html

  code-quality:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Shallow clones should be disabled for SonarCloud
        
    - name: Set up JDK 17 for SonarQube
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        java-package: jdk
        
    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Cache SonarCloud packages
      uses: actions/cache@v3
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
        
    - name: Build and analyze
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        if [ -n "${{ secrets.SONAR_TOKEN }}" ]; then
          echo "Running SonarQube analysis..."
          ./mvnw clean verify sonar:sonar \
            -Dsonar.projectKey=isir_greta \
            -Dsonar.organization=isir \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.projectName="Greta" \
            -Dsonar.projectVersion=${{ github.ref_name }} \
            -Dsonar.branch.name=${{ github.ref_name }} \
            -Dsonar.scm.provider=git
        else
          echo "SONAR_TOKEN not set, skipping SonarQube analysis and running build only..."
          ./mvnw clean verify
        fi

  build:
    runs-on: ubuntu-latest
    needs: [test]  # Removed security dependency while it's disabled
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK ${{ env.JAVA_VERSION }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Build project
      run: ./mvnw clean package -DskipTests
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts
        path: |
          target/*.jar
          */target/*.jar
          
  docker:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/modernization_with_claude'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ghcr.io/${{ github.repository }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha
          
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max