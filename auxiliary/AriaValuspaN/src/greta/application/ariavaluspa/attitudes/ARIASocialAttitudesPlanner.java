/*
 *  This file is part of VIB (Virtual Interactive Behaviour).
 */
package greta.application.ariavaluspa.attitudes;

import java.util.ArrayList;
import java.util.List;
import greta.core.signals.Signal;
import greta.core.signals.SignalEmitter;
import greta.core.signals.SignalPerformer;
import greta.core.util.Mode;
import greta.core.util.enums.SocialAttitude;
import greta.core.util.id.ID;
import greta.core.util.log.Logs;

/**
 *
 * @author Angelo Cafaro
 */
public class ARIASocialAttitudesPlanner extends javax.swing.JFrame implements SignalPerformer, SignalEmitter {

    private List<SignalPerformer> signalPerformers = new ArrayList<>();
    private boolean computeSocialAttitudeExpression = false;
    
    /**
     * Creates new form ARIASocialAttitudesPlanner
     */
    public ARIASocialAttitudesPlanner() {
        initComponents();
        initSocialAttitudesPlanner();
    }

    public boolean isComputingSocialAttitudeExpression() {
        return computeSocialAttitudeExpression;
    }

    public void setComputeSocialAttitudeExpression(boolean computeSocialAttitudeExpression) {
        this.computeSocialAttitudeExpression = computeSocialAttitudeExpression;
    }
         
    @Override
    public void addSignalPerformer(SignalPerformer performer) {
        signalPerformers.add(performer);
    }

    @Override
    public void removeSignalPerformer(SignalPerformer performer) {
        signalPerformers.remove(performer);
    }
    
    private void initSocialAttitudesPlanner() {
        //TODO same as in Seauence Planner
    }
    
    private List<Signal> computeSocialAttitude(List<Signal> inputSignalsList, SocialAttitude attitude) {
        
        if (attitude == SocialAttitude.dominant) {
            //do something with inputSignalList
        }
        return null;
    }

    @Override
    public void performSignals(List<Signal> list, ID id, Mode mode) {
        
        List<Signal> transformedList = list;
        if (computeSocialAttitudeExpression) {
            // TODO Soumia, add your code here and change the "list" variable
            // You can take the attitude to express from the mode variable
            System.out.println("Computing social attitudes...");
            transformedList = this.computeSocialAttitude(list, SocialAttitude.dominant);
        }
                
        // Send sequences to signal performers
        for (SignalPerformer signalPerformer : signalPerformers) {
            signalPerformer.performSignals(transformedList, id, mode);
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        computeAttitudesCheck = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        computeAttitudesCheck.setSelected(true);
        computeAttitudesCheck.setText("Compute Attitudes");
        computeAttitudesCheck.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                computeAttitudesCheckStateChanged(evt);
            }
        });
        computeAttitudesCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                computeAttitudesCheckActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(computeAttitudesCheck, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(36, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(computeAttitudesCheck)
                .addContainerGap(40, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void computeAttitudesCheckStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_computeAttitudesCheckStateChanged
        if (computeAttitudesCheck.isSelected()) {
            computeSocialAttitudeExpression = true;
        }
        else {
            computeSocialAttitudeExpression = false;
        }
    }//GEN-LAST:event_computeAttitudesCheckStateChanged

    private void computeAttitudesCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_computeAttitudesCheckActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_computeAttitudesCheckActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ARIASocialAttitudesPlanner.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ARIASocialAttitudesPlanner.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ARIASocialAttitudesPlanner.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ARIASocialAttitudesPlanner.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ARIASocialAttitudesPlanner().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox computeAttitudesCheck;
    // End of variables declaration//GEN-END:variables
}
