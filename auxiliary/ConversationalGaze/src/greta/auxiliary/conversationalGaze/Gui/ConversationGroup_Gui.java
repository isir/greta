/*
 * Copyright 2025 Greta Modernization Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package greta.auxiliary.conversationalGaze.Gui;

import greta.auxiliary.conversationalGaze.ConversationParticipant;
import greta.auxiliary.conversationalGaze.ConversationalGroup;

/**
 *
 * @author donat
 */
public class ConversationGroup_Gui extends javax.swing.JFrame {

    private ConversationalGroup group;
    private boolean start = false;
    /**
     * Creates new form ConversationGroup_Gui
     */
    public ConversationGroup_Gui() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        check_user = new javax.swing.JCheckBox();

        check_user.setText("Remove the User from participant list");
        check_user.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                check_userActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(check_user)
                .addContainerGap(178, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addComponent(check_user)
                .addContainerGap(205, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void check_userActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_check_userActionPerformed
        if (check_user.isEnabled()){
            boolean found = false;
            for(ConversationParticipant c : group.listParticipants){
                if(c.getName().equals("user"))
                found = true;
            }
            if (found)
            group.groupActive = false;
            group.listParticipants.remove("user");
            group.groupActive = true;
            group.start();
        }else {
            group.groupActive = false;
            group.listParticipants.add(new ConversationParticipant("user"));
            group.groupActive = true;
            group.start();
        }
    }//GEN-LAST:event_check_userActionPerformed

    public void setGui (ConversationalGroup gr){
        this.group = gr;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox check_user;
    // End of variables declaration//GEN-END:variables
}
