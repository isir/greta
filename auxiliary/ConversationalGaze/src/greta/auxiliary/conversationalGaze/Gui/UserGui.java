/*
 * This file is part of the auxiliaries of Greta.
 *
 * Greta is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Greta is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with Greta.  If not, see <https://www.gnu.org/licenses/>.
 *
 */
package greta.auxiliary.conversationalGaze.Gui;

import greta.auxiliary.conversationalGaze.User;

/**
 *
 * @author Donatella Simonetti
 */
public class UserGui extends javax.swing.JFrame {

    User gazeuser;
    /**
     * Creates new form UserGui
     */
    public UserGui() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pos_x = new javax.swing.JTextField();
        pos_y = new javax.swing.JTextField();
        pos_z = new javax.swing.JTextField();
        cam_position = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        rot_yaw = new javax.swing.JTextField();
        rot_pitch = new javax.swing.JTextField();
        rot_roll = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        Cam_label = new javax.swing.JLabel();
        lbl_pos_x = new javax.swing.JLabel();
        lbl_pos_y = new javax.swing.JLabel();
        lbl_pos_z = new javax.swing.JLabel();
        lab_yaw = new javax.swing.JLabel();
        lab_pitch = new javax.swing.JLabel();
        lab_roll = new javax.swing.JLabel();

        pos_x.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        pos_x.setPreferredSize(new java.awt.Dimension(60, 20));
        pos_x.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pos_xActionPerformed(evt);
            }
        });

        pos_y.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        pos_y.setPreferredSize(new java.awt.Dimension(60, 20));
        pos_y.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pos_yActionPerformed(evt);
            }
        });

        pos_z.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        pos_z.setPreferredSize(new java.awt.Dimension(60, 20));
        pos_z.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pos_zActionPerformed(evt);
            }
        });

        cam_position.setText("Position (meters)");

        jLabel4.setText("Orientation (degree)");

        rot_yaw.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        rot_yaw.setPreferredSize(new java.awt.Dimension(60, 20));
        rot_yaw.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rot_yawActionPerformed(evt);
            }
        });

        rot_pitch.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        rot_pitch.setPreferredSize(new java.awt.Dimension(60, 20));
        rot_pitch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rot_pitchActionPerformed(evt);
            }
        });

        rot_roll.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        rot_roll.setPreferredSize(new java.awt.Dimension(60, 20));
        rot_roll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rot_rollActionPerformed(evt);
            }
        });

        jSeparator1.setMaximumSize(new java.awt.Dimension(50, 10));

        Cam_label.setText("Camera");

        lbl_pos_x.setText("x");

        lbl_pos_y.setText("y");

        lbl_pos_z.setText("z");

        lab_yaw.setText("rot_x");

        lab_pitch.setText("rot_y");

        lab_roll.setText("rot_z");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cam_position)
                        .addGap(39, 39, 39)
                        .addComponent(lbl_pos_x)
                        .addGap(76, 76, 76)
                        .addComponent(lbl_pos_y, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(57, 57, 57)
                        .addComponent(lbl_pos_z, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(Cam_label)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 455, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(rot_yaw, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(jLabel4)
                                    .addGap(18, 18, 18)
                                    .addComponent(lab_yaw))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addGap(96, 96, 96)
                                    .addComponent(pos_x, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(36, 36, 36)
                                .addComponent(lab_pitch)
                                .addGap(45, 45, 45)
                                .addComponent(lab_roll))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(rot_pitch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(rot_roll, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(pos_y, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(pos_z, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(Cam_label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cam_position)
                    .addComponent(lbl_pos_x)
                    .addComponent(lbl_pos_y)
                    .addComponent(lbl_pos_z))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pos_x, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pos_y, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pos_z, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(lab_yaw)
                    .addComponent(lab_pitch)
                    .addComponent(lab_roll))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rot_yaw, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rot_pitch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rot_roll, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 153, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void pos_xActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pos_xActionPerformed
        if (pos_x != null){
            double px = Double.parseDouble(pos_x.getText());
            synchronized(pos_x){
                this.gazeuser.cam_px = px;
            }
        }
    }//GEN-LAST:event_pos_xActionPerformed

    private void pos_yActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pos_yActionPerformed
        if (pos_y != null){
            double py = Double.parseDouble(pos_y.getText());
            synchronized(pos_y){
                this.gazeuser.cam_py = py;
            }
        }
    }//GEN-LAST:event_pos_yActionPerformed

    private void pos_zActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pos_zActionPerformed
        if (pos_z != null){
            double pz = Double.parseDouble(pos_z.getText());
            synchronized(pos_z){
                this.gazeuser.cam_pz = pz;
            }

        }
    }//GEN-LAST:event_pos_zActionPerformed

    private void rot_yawActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rot_yawActionPerformed
        if (rot_yaw != null){
            double yaw = Double.parseDouble(rot_yaw.getText());
            synchronized(rot_yaw){
                this.gazeuser.cam_ry = yaw;
            }

        }
    }//GEN-LAST:event_rot_yawActionPerformed

    private void rot_pitchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rot_pitchActionPerformed
        if (rot_pitch != null){
            double pitch = Double.parseDouble(rot_pitch.getText());
            synchronized(rot_pitch){
                this.gazeuser.cam_rx = pitch;
            }

        }
    }//GEN-LAST:event_rot_pitchActionPerformed

    private void rot_rollActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rot_rollActionPerformed
        if (rot_roll != null){
            double roll = Double.parseDouble(rot_roll.getText());
            synchronized(rot_roll){
                this.gazeuser.cam_rz = roll;
            }

        }
    }//GEN-LAST:event_rot_rollActionPerformed

    public void setUserParticipant (User user){
        this.gazeuser = gazeuser;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Cam_label;
    private javax.swing.JLabel cam_position;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lab_pitch;
    private javax.swing.JLabel lab_roll;
    private javax.swing.JLabel lab_yaw;
    private javax.swing.JLabel lbl_pos_x;
    private javax.swing.JLabel lbl_pos_y;
    private javax.swing.JLabel lbl_pos_z;
    private javax.swing.JTextField pos_x;
    private javax.swing.JTextField pos_y;
    private javax.swing.JTextField pos_z;
    private javax.swing.JTextField rot_pitch;
    private javax.swing.JTextField rot_roll;
    private javax.swing.JTextField rot_yaw;
    // End of variables declaration//GEN-END:variables

    public double getCoordinateX(){
    return Double.parseDouble(pos_x.getText());
    }

    public double getCoordinateY(){
        return Double.parseDouble(pos_y.getText());
    }

    public double getCoordinateZ(){
        return Double.parseDouble(pos_z.getText());
    }

    public double getOrientationX(){
        return Double.parseDouble(rot_pitch.getText());
    }

    public double getOrientationY(){
        return Double.parseDouble(rot_yaw.getText());
    }

    public double getOrientationZ(){
        return Double.parseDouble(rot_roll.getText());
    }

    public void setCoordinateX(double value){
        pos_x.setText(Double.toString(value));

    }

    public void setCoordinateY(double value){
        pos_y.setText(Double.toString(value));
    }

    public void setCoordinateZ(double value){
        pos_z.setText(Double.toString(value));
    }

    public void setOrientationX(double value){
        rot_pitch.setText(Double.toString(value));
    }

    public void setOrientationY(double value){
        rot_yaw.setText(Double.toString(value));
    }

    public void setOrientationZ(double value){
        rot_roll.setText(Double.toString(value));
    }


}
