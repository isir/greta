/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package greta.auxiliary.incrementality;

import java.io.File;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;

/**
 *
 * @author Michele
 */
public class IncRealizerInteractionGUI extends javax.swing.JFrame {

    /**
     * Creates new form IncRealizerInteractionGUI
     */
    public IncRealizerInteractionGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void fileNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileNameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fileNameTextFieldActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        sendPauseGesture();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        sendResume();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        sendStop();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        sendClearQueue();
    }//GEN-LAST:event_jButton4ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JFileChooser jFileChooser1;
    // End of variables declaration//GEN-END:variables


    private Method pauseGestureLoadMethod;
    private Method resumeLoadMethod;
    private Method stopLoadMethod;
    private Method clearQueueLoadMethod;
    private Object loader;

    protected void sendPauseGesture() {
        if(pauseGestureLoadMethod!=null){
            try {
                pauseGestureLoadMethod.invoke(loader);
            }
            catch (InvocationTargetException ex) {
                ex.getCause().printStackTrace();
            }
            catch (Exception ex) {
                System.err.println(ex);
            }
        }
        else{
            System.out.println("load is null");
        }
    }
    
    protected void sendResume() {
        if(resumeLoadMethod!=null){
            try {
                resumeLoadMethod.invoke(loader);
            }
            catch (InvocationTargetException ex) {
                ex.getCause().printStackTrace();
            }
            catch (Exception ex) {
                System.err.println(ex);
            }
        }
        else{
            System.out.println("load is null");
        }
    }
    
        protected void sendStop() {
        if(stopLoadMethod!=null){
            try {
                stopLoadMethod.invoke(loader);
            }
            catch (InvocationTargetException ex) {
                ex.getCause().printStackTrace();
            }
            catch (Exception ex) {
                System.err.println(ex);
            }
        }
        else{
            System.out.println("load is null");
        }
    }
        
        protected void sendClearQueue() {
        if(clearQueueLoadMethod!=null){
            try {
                clearQueueLoadMethod.invoke(loader);
            }
            catch (InvocationTargetException ex) {
                ex.getCause().printStackTrace();
            }
            catch (Exception ex) {
                System.err.println(ex);
            }
        }
        else{
            System.out.println("load is null");
        }
    }

    public void setLoader(Object loader){
        this.loader = loader;
        try {
            pauseGestureLoadMethod = loader.getClass().getMethod("sendPauseGesture");
            resumeLoadMethod = loader.getClass().getMethod("sendResume");
            stopLoadMethod = loader.getClass().getMethod("sendStop");
            clearQueueLoadMethod = loader.getClass().getMethod("sendClearQueue");
        } catch (Exception ex) {
            System.err.println(ex);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
