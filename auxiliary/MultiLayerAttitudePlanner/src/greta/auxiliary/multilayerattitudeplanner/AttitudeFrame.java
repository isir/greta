/*
 *  This file is part of VIB (Virtual Interactive Behaviour).
 */
package greta.auxiliary.multilayerattitudeplanner;

import java.util.ArrayList;
import java.util.List;
import greta.auxiliary.multilayerattitudeplanner.structures.AttitudeDimension;
import greta.auxiliary.multilayerattitudeplanner.structures.ValuedAttitudeVariation;

/**
 *
 * @author Mathieu
 */
public class AttitudeFrame extends javax.swing.JFrame implements AttitudeEmitter {
    
    private List<AttitudePerformer> performers;
    private double previousDomValue;
    private double previousFrdValue;

    /**
     * Creates new form AttitudeFrame
     */
    public AttitudeFrame() {
        initComponents();
        performers = new ArrayList<AttitudePerformer>();
        previousDomValue=0.0;
        previousFrdValue=0.0;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextFieldDominance = new javax.swing.JTextField();
        jTextFieldFriendliness = new javax.swing.JTextField();
        jSliderDominance = new javax.swing.JSlider();
        jSliderFriendliness = new javax.swing.JSlider();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextFieldDominance.setEditable(false);
        jTextFieldDominance.setText("0.0");

        jTextFieldFriendliness.setEditable(false);
        jTextFieldFriendliness.setText("0.0");

        jSliderDominance.setMinimum(-100);
        jSliderDominance.setValue(0);
        jSliderDominance.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSliderDominanceStateChanged(evt);
            }
        });

        jSliderFriendliness.setMinimum(-100);
        jSliderFriendliness.setValue(0);
        jSliderFriendliness.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSliderFriendlinessStateChanged(evt);
            }
        });

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Dominance");

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Friendliness");

        jButton.setText("Send");
        jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 137, Short.MAX_VALUE)
                            .addComponent(jSliderDominance, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(jTextFieldDominance))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldFriendliness)
                            .addComponent(jSliderFriendliness, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 137, Short.MAX_VALUE)))
                    .addComponent(jButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldDominance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldFriendliness, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSliderDominance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSliderFriendliness, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jSliderDominanceStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSliderDominanceStateChanged
        // TODO add your handling code here:
        jTextFieldDominance.setText(String.valueOf(((double)jSliderDominance.getValue())/100)
                +" / "+String.valueOf(((double)jSliderDominance.getValue()/100-previousDomValue)));
    }//GEN-LAST:event_jSliderDominanceStateChanged

    private void jSliderFriendlinessStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSliderFriendlinessStateChanged
        // TODO add your handling code here:
        jTextFieldFriendliness.setText(String.valueOf(((double)jSliderFriendliness.getValue())/100)
                +" / "+String.valueOf(((double)jSliderFriendliness.getValue()/100-previousFrdValue)));
    }//GEN-LAST:event_jSliderFriendlinessStateChanged

    private void jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonActionPerformed
        // TODO add your handling code here:
        sendAttitude();
    }//GEN-LAST:event_jButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AttitudeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AttitudeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AttitudeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AttitudeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AttitudeFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSlider jSliderDominance;
    private javax.swing.JSlider jSliderFriendliness;
    private javax.swing.JTextField jTextFieldDominance;
    private javax.swing.JTextField jTextFieldFriendliness;
    // End of variables declaration//GEN-END:variables

    @Override
    public void addAttitudePerformer(AttitudePerformer performer) {
        performers.add(performer);
    }

    @Override
    public void removeAttitudePerformer(AttitudePerformer performer) {
        performers.remove(performer);
    }

    public void sendAttitude()
    {
        double domVar=((double)jSliderDominance.getValue())/100 -previousDomValue;
        double frdVar=((double)jSliderFriendliness.getValue())/100 -previousFrdValue;
        
        previousDomValue=((double)jSliderDominance.getValue())/100;
        previousFrdValue=((double)jSliderFriendliness.getValue())/100;
        
        for(AttitudePerformer ap : performers)
        {
            ValuedAttitudeVariation dom = new ValuedAttitudeVariation(AttitudeDimension.Dominance, domVar);
            ap.performAttitude(dom);
            ValuedAttitudeVariation frd = new ValuedAttitudeVariation(AttitudeDimension.Friendliness, frdVar);
            ap.performAttitude(frd);
        }
        
        jTextFieldDominance.setText(String.valueOf(((double)jSliderDominance.getValue())/100)
                +" / 0.0");
        jTextFieldFriendliness.setText(String.valueOf(((double)jSliderFriendliness.getValue())/100)
                +" / 0.0");
    }
    
}
