.. Auto-generated openSMILE component documentation

.. Include isonum to use |rarr|
.. include:: <isonum.txt>

.. _cPitchACF:

cPitchACF
---------

Description
~~~~~~~~~~~
This component computes the fundamental frequency and the probability of voicing via an acf and cepstrum based method\. The input must be an acf field and a cepstrum field \(both generated by a cAcf component\)\.

Type hierarchy
~~~~~~~~~~~~~~
:ref:`cDataProcessor` |rarr| :ref:`cVectorProcessor` |rarr| :ref:`cPitchACF`

Fields
~~~~~~
- **processArrayFields** (numeric) [default: 0\.0]
  
    1 \= process each array field as one vector individually \(and produce one output for each input array field\)\. Only array fields \(i\.e\. fields with more than one element\) are processed if this is set\. \/ 0 \= process complete input frame as one vector\, ignoring field\/element structure
  
- **maxPitch** (numeric) [default: 500\.0]
  
    Maximum detectable pitch in Hz
  
- **voiceProb** (numeric) [default: 1\.0]
  
    1\/0 \= on\/off\: output of voicing probability
  
- **voiceQual** (numeric) [default: 0\.0]
  
    1\/0 \= on\/off\: output of voice \'quality\' \(\= ZCR of ACF\)
  
- **HNR** (numeric) [default: 0\.0]
  
    1\/0 \= on\/off\; output of log \(base e\) harmonics\-to\-noise ratio \(HNR\) computed from the ACF\, pre 2\.0 compatibility\.
  
- **HNRdB** (numeric) [default: 0\.0]
  
    1\/0 \= on\/off\; output of log \(dB\, base 10\) harmonics\-to\-noise ratio \(HNR\) computed from the ACF\. Recommended\.
  
- **linHNR** (numeric) [default: 0\.0]
  
    1\/0 \= on\/off\; output of linear harmonics\-to\-noise ratio \(HNR\) computed from the ACF\.
  
- **F0** (numeric) [default: 0\.0]
  
    1\/0 \= on\/off\: output of F0 \(pitch\) \(Note\: the pitch output is 0 in unvoiced segments\)
  
- **F0raw** (numeric) [default: 0\.0]
  
    1\/0 \= on\/off\: output of raw F0 candidate without thresholding in unvoiced segments
  
- **F0env** (numeric) [default: 0\.0]
  
    1\/0 \= on\/off\: output of F0 envelope \(expontial decay smoothing\) \(Note\: this differs from the envelope computed by the cPitchBase descendant components\, such as cPitchSHS\!\)
  
- **voicingCutoff** (numeric) [default: 0\.55]
  
    This sets the voicing probability threshold for pitch detection \[0\.0 \- 1\.0\]\. Frames with voicing probability values above this threshold will be considered as voiced\.
  
