
[componentInstances:cComponentManager]
instance[dataMemory].type=cDataMemory

;;; default source
\{\cm[source{?}:source include config]}

;;; prosody
[componentInstances:cComponentManager]
instance[framer_pros].type = cFramer
instance[win_pros].type = cWindower
instance[fft_pros].type = cTransformFFT
instance[int].type=cIntensity
instance[fftmag_pros].type=cFFTmagphase
instance[acf].type=cAcf
instance[cep].type=cAcf
instance[pitch].type=cPitchACF
instance[funcconcat].type=cVectorConcat

;;; mfcc
instance[frame_mfcc].type=cFramer
instance[pe].type=cVectorPreemphasis
instance[win_mfcc].type=cWindower
instance[fft_mfcc].type=cTransformFFT
instance[fftmag_mfcc].type=cFFTmagphase
 ; compute magnitude of the complex fft from the previous component
instance[melspec].type=cMelspec
 ; compute Mel-bands from magnitude spectrum
instance[mfcc].type=cMfcc


[framer_pros:cFramer]
reader.dmLevel = wave
writer.dmLevel = frames_pros
copyInputName = 1
;allowLastFrameIncomplete = 1
frameMode = fixed
frameSize = 0.025
frameStep = 0.01
frameCenterSpecial = left
noPostEOIprocessing = 1

[win_pros:cWindower]
reader.dmLevel=frames_pros
writer.dmLevel=win_pros
winFunc=gauss
gain=1.0

[int:cIntensity]
reader.dmLevel = frames_pros
writer.dmLevel = intens
// nameAppend =
;copyInputName = 1
processArrayFields = 1
intensity = 0
loudness = 1

[fft_pros:cTransformFFT]
reader.dmLevel=win_pros
writer.dmLevel=fft_pros


[fftmag_pros:cFFTmagphase]
reader.dmLevel=fft_pros
writer.dmLevel=fftmag_pros

[acf:cAcf]
reader.dmLevel=fftmag_pros
writer.dmLevel=acf

[cep:cAcf]
reader.dmLevel=fftmag_pros
writer.dmLevel=cepstrum
cepstrum=1

[pitch:cPitchACF]
reader.dmLevel = acf;cepstrum
writer.dmLevel = pitch
// nameAppend =
;copyInputName = 1
processArrayFields = 0
maxPitch = 500
voiceProb = 1
voiceQual = 0
HNR = 0
F0 = 1
F0raw = 0
F0env = 0
voicingCutoff = 0.550000


[frame_mfcc:cFramer]
reader.dmLevel=wave
writer.dmLevel=frames_mfcc
; noPostEOIprocessing = 1
; copyInputName = 1
frameSize = 0.025
frameStep = 0.010
frameMode = fixed
frameCenterSpecial = left

[pe:cVectorPreemphasis]
reader.dmLevel=frames_mfcc
writer.dmLevel=framespe
k=0.97
de = 0

[win_mfcc:cWindower]
reader.dmLevel=framespe
writer.dmLevel=win_mfcc
; copyInputName = 1
processArrayFields = 1
 ; hamming window
winFunc = ham
 ; no gain
gain = 1.0
offset = 0

[fft_mfcc:cTransformFFT]
reader.dmLevel=win_mfcc
writer.dmLevel=fft_mfcc
; copyInputName = 1
processArrayFields = 1
inverse = 0

[fftmag_mfcc:cFFTmagphase]
reader.dmLevel=fft_mfcc
writer.dmLevel=fftmag_mfcc
; copyInputName = 1
processArrayFields = 1
inverse = 0
magnitude = 1
phase = 0

[melspec:cMelspec]
reader.dmLevel=fftmag_mfcc
writer.dmLevel=melspec
; copyInputName = 1
processArrayFields = 1
; htk compatible sample value scaling
htkcompatible = 0
nBands = 26
; use power spectrum instead of magnitude spectrum
usePower = 1
lofreq = 0
hifreq = 8000
specScale = mel
inverse = 0

[mfcc:cMfcc]
reader.dmLevel=melspec
writer.dmLevel=mfcc
writer.levelconf.growDyn=1
writer.levelconf.isRb=0
buffersize=1000
; copyInputName = 1
processArrayFields = 1
firstMfcc = 0
lastMfcc  = 12
cepLifter = 22.0
htkcompatible = 0


[funcconcat:cVectorConcat]
reader.dmLevel = pitch;intens;mfcc
writer.dmLevel = funcconcat
includeSingleElementFields = 1

;;; default sink
\{\cm[sink{?}:include external sink]}
