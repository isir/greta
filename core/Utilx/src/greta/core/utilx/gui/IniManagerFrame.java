/*
 * This file is part of Greta.
 *
 * Greta is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Greta is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with Greta.  If not, see <https://www.gnu.org/licenses/>.
 *
 */
package greta.core.utilx.gui;

import greta.core.util.IniManager;
import greta.core.util.IniParameter;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;
import java.util.Locale;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;

/**
 *
 * @author Andre-Marie Pez
 */
public class IniManagerFrame extends javax.swing.JFrame {


    IniLoader iniLoader;
    private IniManager iniManager = null;

    /** Creates new form IniManagerFrame */
    public IniManagerFrame() {
        initComponents();
        setLocale(Locale.getDefault());
    }

    public void connect(IniLoader iniLoader){
        this.iniLoader = iniLoader;
        loaderContainer.setViewportView(this.iniLoader);
        this.iniLoader.setManagerFrame(this);
    }

    public void setIniManager(IniManager iniManager){
        this.iniManager=iniManager;
        jTable1.getModel().addTableModelListener(new TableModelListener(){
            @Override
            public void tableChanged(TableModelEvent tme) {
                if(IniManagerFrame.this.iniManager == null) {
                    return;
                }
                if(TableModelEvent.UPDATE == tme.getType() && tme.getFirstRow()>=0){
                    String name = jTable1.getValueAt(tme.getFirstRow(), 0).toString();
                    String value = jTable1.getValueAt(tme.getFirstRow(), 1).toString();
                    IniManagerFrame.this.iniManager.setValueString(name, value);
                    IniManagerFrame.this.iniLoader.fireIniChanged();
                }
            }
        });
        List<IniParameter> params = iniManager.getAll();
        Collections.sort(params, new Comparator<IniParameter>() {

            @Override
            public int compare(IniParameter o1, IniParameter o2) {
                return String.CASE_INSENSITIVE_ORDER.compare(o1.getParamName(), o2.getParamName());
            }
        });
        for(IniParameter param : params){
            ((javax.swing.table.DefaultTableModel)jTable1.getModel()).addRow(new String[]{param.getParamName(),param.getParamValue()});
        }

    }

    public void setDefinition(String name){
        //here, empty definition are not permited
        if(name==null || name.isEmpty()){
            return ;
        }
        iniManager.setDefinition(name);
        updateIniParameters();
        iniLoader.fireIniDefinitionChanged(name);
    }

    public String getDefinition(){
        return iniManager.getCurrentDefinition().getName();
    }


    protected void updateIniParameters(){
        for(int i=0; i<jTable1.getRowCount(); ++i){
            jTable1.setValueAt(iniManager.getValueString(jTable1.getValueAt(i, 0).toString()), i, 1);
        }
    }

    @Override
    public void setLocale(Locale l) {
        super.setLocale(l);
        if(jTable1!=null) {
            ((javax.swing.table.DefaultTableModel)jTable1.getModel())
                    .setColumnIdentifiers(
                    new String[]{
                        IniManager.getLocaleProperty("word.parameter", l),
                        IniManager.getLocaleProperty("word.value", l)
                    });
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane3 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        loaderContainer = new javax.swing.JScrollPane();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Parameter", "Value"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(jTable1);

        loaderContainer.setBorder(null);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 469, Short.MAX_VALUE)
                    .addComponent(loaderContainer, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 469, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(loaderContainer, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 407, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JScrollPane loaderContainer;
    // End of variables declaration//GEN-END:variables

}
